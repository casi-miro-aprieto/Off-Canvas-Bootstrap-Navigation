$font_color : #ffffff;
$bgk_color : #2B2B2B;
$side_default: 1px;
$border_default : #5EAEDA;
$default_color : #222222;



@mixin total_position() {
    top:0;
    right:0;
    bottom:0;
    left:0;
}

@mixin list_style () {
	list-style: none;
	background: $bgk_color;
}

@mixin gen_border ($side, $size : $side_default, $color: $border_default, $alpha: 1){
	$red: red($color);
	$green: green($color);
	$blue: blue($color);
	@if ($side != ""){
		border-#{$side}:$size solid rgba($red, $green, $blue, $alpha);
	} 
}

@mixin placeholder-color($color){
  &.placeholder{
    color: $color
  }

  &:-moz-placeholder{
    color: $color
  }
    
  &::-webkit-input-placeholder{
    color: $color
  }

  &:-ms-input-placeholder{
    color: $color
  }
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin clearfix() {
  & {
      *zoom: 1;
  }
  &:before,
  &:after {
      content: "";
      display: table;
  }
  &:after {
      clear: both;
  }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;
}


@mixin get_gradiant($from_color: $default_color, $to_color:$default_color){
	
	$from_red: red($from_color);
	$from_green: green($from_color);
	$from_blue: blue($from_color);

	$to_red: red($to_color);
	$to_green: green($to_color);
	$to_blue: blue($to_color);
	
	background-color: $from_color;
	background-image: -webkit-gradient(linear, left top, left bottom, from(rgb($from_red, $from_green, $from_blue)), to(rgb($to_red, $to_green, $to_blue)));
	background-image: -webkit-linear-gradient(top, rgb($from_red, $from_green, $from_blue), rgb($to_red, $to_green, $to_blue));
	background-image: -moz-linear-gradient(top, rgb($from_red, $from_green, $from_blue), rgb($to_red, $to_green, $to_blue));
	background-image: -o-linear-gradient(top, rgb($from_red, $from_green, $from_blue), rgb($to_red, $to_green, $to_blue));
	background-image: -ms-linear-gradient(top, rgb($from_red, $from_green, $from_blue), rgb($to_red, $to_green, $to_blue));
	background-image: linear-gradient(top, rgb($from_red, $from_green, $from_blue), rgb($to_red, $to_green, $to_blue));
}

@mixin get_animation($speed : .3s){
	-webkit-transition: all $speed ease;
	-moz-transition: all $speed ease;
	-ms-transition: all $speed ease;
	-o-transition: all $speed ease;
	transition: all $speed ease;
}


@mixin rotate_object($degrees : 45deg){
	-webkit-transform: rotate($degrees);
	-moz-transform: rotate($degrees);
	-ms-transform: rotate($degrees);
	-o-transform: rotate($degrees);
	transform: rotate($degrees);
}

@mixin image_scale($value: 1.1){
	-webkit-transform: scale($value);
	   -moz-transform: scale($value);
	    -ms-transform: scale($value);
	     -o-transform: scale($value);
	        transform: scale($value);
}


@mixin headings($from: 1, $to: 6){
    @for $i from $from through $to{
      h#{$i}{
        @content
      }
    }
}

@mixin include_heading(){
	@include headings(){
		font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; 
		color:$font_color;
	    font-weight: 400;
	    margin:5px 0px;
	    padding:2px;
	}
}

/**
 * Thanks to Joren -- @jorenvanhee
 * Great repo https://github.com/jorenvanhee/sass-burger
 *
 * 
 * Burger parts
 *
 * (---) top    -> &:before
 * [---] middle -> &
 * (---) bottom -> &:after
 */


/**
 * Burger
 */

@mixin burger($width: 30px, $height: 5px, $gutter: 3px, $color: #000, $border-radius: 0, $transition-duration: .3s) {
    $burger-height: $height !global;
    $burger-gutter: $gutter !global;

    position: relative;
    margin-top: $height + $gutter;
    margin-bottom: $height + $gutter;

    &, &:before, &:after {
        display: block;
        width: $width;
        height: $height;
        background-color: $color;
        @if $border-radius != 0 {
            border-radius: $border-radius;
        }
        
        -webkit-transition-property: background-color, -webkit-transform;
        -moz-transition-property: background-color, -moz-transform;
        -o-transition-property: background-color, -o-transform;
        transition-property: background-color, transform;

        -webkit-transition-duration: $transition-duration;
        -moz-transition-duration: $transition-duration;
        -o-transition-duration: $transition-duration;
        transition-duration: $transition-duration;
    }

    &:before, &:after {
        position: absolute;
        content: "";
    }

    &:before {
        top: -($height + $gutter);
    }

    &:after {
        top: $height + $gutter;
    }
}


/**
 * Select parts of the burger
 */

@mixin burger-parts {
    &, &:before, &:after {
        @content;
    }
}

@mixin burger-top {
    &:before {
        @content;
    }
}

@mixin burger-middle {
    & {
        @content;
    }
}

@mixin burger-bottom {
    &:after {
        @content;
    }
}


/**
 * Burger animations
 */

@mixin burger-to-cross {
    & {
        background-color: transparent;
    }
    &:before {
        -webkit-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
        -moz-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
        -ms-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
        -o-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
        transform: translateY($burger-gutter + $burger-height) rotate(45deg);
    }
    &:after {
        -webkit-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
        -moz-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
        -ms-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
        -o-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
        transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
    }
}
